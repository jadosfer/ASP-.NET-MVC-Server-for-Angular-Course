{"version":3,"sources":["./src/app/dashboard.service.ts","./src/app/admin/project/project.component.ts","./src/app/admin/project/project.component.html","./src/app/admin/check-box-printer/check-box-printer.component.ts","./src/app/admin/check-box-printer/check-box-printer.component.html","./src/app/project.ts","./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/environments/environment.ts","./src/app/repeater.directive.ts","./src/app/client-locations.service.ts","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/can-activate-guard.service.ts","./src/app/client-location.ts","./src/app/jwt-interceptor.service.ts","./src/app/employee/employee.module.ts","./src/app/number-to-words.pipe.ts","./src/app/employee/employee-routing/employee-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/router-logger.service.ts","./src/app/login-view-model.ts","./src/app/client-location-status-validator.directive.ts","./src/app/alert.directive.ts","./src/app/admin/admin-routing/admin-routing.module.ts","./src/app/admin/project-details/project-details.component.ts","./src/app/admin/project-details/project-details.component.html","./src/app/countries.service.ts","./src/app/paging.pipe.ts","./src/app/app.module.ts","./src/app/custom-validators.service.ts","./src/app/project-idunique-validator.directive.ts","./src/app/team-size-validator.directive.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/login.service.ts","./src/app/jwt-un-authorized-interceptor.service.ts","./src/app/filter.pipe.ts","./src/app/admin/admin.module.ts","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/employee/tasks/tasks.component.ts","./src/app/employee/tasks/tasks.component.html","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/projects.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DashboardService {\r\n  getTeamMembersSummary(): any[] {\r\n    var TeamMembersSummary = [\r\n      {\r\n        Region: 'East',\r\n        TeamMembersCount: 20,\r\n        TemporarilyUnavailableMembers: 4,\r\n      },\r\n      {\r\n        Region: 'West',\r\n        TeamMembersCount: 15,\r\n        TemporarilyUnavailableMembers: 8,\r\n      },\r\n      {\r\n        Region: 'South',\r\n        TeamMembersCount: 17,\r\n        TemporarilyUnavailableMembers: 1,\r\n      },\r\n      {\r\n        Region: 'North',\r\n        TeamMembersCount: 15,\r\n        TemporarilyUnavailableMembers: 6,\r\n      },\r\n    ];\r\n    return TeamMembersSummary;\r\n  }\r\n}","import { Component, OnInit, Input, EventEmitter, Output, ContentChild, ContentChildren, QueryList, SimpleChanges, OnChanges, DoCheck, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Project } from 'src/app/project';\r\nimport { ProjectsService } from 'src/app/projects.service';\r\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.scss']\r\n})\r\nexport class ProjectComponent implements OnChanges, OnInit, DoCheck, OnDestroy\r\n{\r\n  @Input(\"currentProject\") project: Project;\r\n  @Input(\"recordIndex\") i: number;\r\n\r\n  @Output() editClick = new EventEmitter();\r\n  @Output() deleteClick = new EventEmitter();\r\n\r\n  hideDetails: boolean = false;\r\n  MySubscription: Subscription;\r\n\r\n  constructor(public projectsService : ProjectsService)\r\n  {\r\n  }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges){\r\n    console.info(\"------------ngOnChanges called\");\r\n    for (let propName in simpleChanges)\r\n    {\r\n      let chng = simpleChanges[propName];\r\n      let cur = JSON.stringify(chng.currentValue);\r\n      let prev = JSON.stringify(chng.previousValue);\r\n      console.log(`${propName}: currentValue = ${cur}, previousValue = ${prev}`);\r\n    }\r\n    if (simpleChanges[\"project\"])\r\n    {\r\n      //this.project.teamSize += 1; //esto fue un ejercicio para ver qué se puede hacer en ngOnChanges\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit()\r\n  {\r\n    console.info(\"------------ngOnInit called\");\r\n    this.MySubscription = this.projectsService.MySubject.subscribe((hide) => {\r\n      this.hideDetails = hide;\r\n    });\r\n  }\r\n\r\n  ngDoCheck() {\r\n    console.info(\"------------ngDoCheck called\");\r\n  }\r\n\r\n  onEditClick(event, i)\r\n  {\r\n    this.editClick.emit({ event, i});\r\n  }\r\n\r\n  onDeleteClick(event, i)\r\n  {\r\n    this.deleteClick.emit({ event, i});\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    console.info(\"----------------------------------------------------ngOnDestroy called\");\r\n    this.MySubscription.unsubscribe();\r\n  }\r\n\r\n  @ContentChildren(\"selectionBox\") selectionBoxes: QueryList<CheckBoxPrinterComponent>;\r\n\r\n  isAllCheckedChange(b: boolean)\r\n  {\r\n    let selectionBox = this.selectionBoxes.toArray();\r\n    if (b)\r\n    {\r\n      for (let i=0;i<selectionBox.length;i++) {\r\n        selectionBox[i].check();\r\n      }\r\n    }\r\n    else\r\n    {\r\n      for (let i=0;i<selectionBox.length;i++) {\r\n        selectionBox[i].unCheck();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"card card-primary\">\r\n\r\n  <div class=\"card-header\">\r\n    <div class=\"row\">\r\n      <div class=\"col-11\">\r\n        <div>#{{project.projectID}}</div>\r\n        <h5>{{project.projectName}}</h5>\r\n      </div>\r\n      <div class=\"col-1\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n  <div class=\"card-body\">\r\n    <table class=\"table table-borderless table-sm\" [hidden]=\"hideDetails\">\r\n      <tr>\r\n        <th>Date of Start</th>\r\n        <td>{{project.dateOfStart}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Team Size</th>\r\n        <td>\r\n          <span>{{project.teamSize + \" \"}}</span>\r\n          <span class=\"text-info\">{{project.teamSize | numberToWords: ' and '}}</span>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Client Location</th>\r\n        <td>{{project.clientLocation?.clientLocationName}}</td>\r\n      </tr>\r\n      <tr>\r\n        <th>Status</th>\r\n        <td>{{project.status}}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"card-footer\">\r\n    <button class=\"btn btn-info\" (click)=\"onEditClick($event, i)\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>&nbsp;\r\n    <button class=\"btn btn-warning\" (click)=\"onDeleteClick($event, i)\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\r\n\r\n    <a class=\"btn btn-primary\" [routerLink]=\" [ '/admin', 'projects', 'view', project.projectID] \">Learn More</a>\r\n    <!-- /projects/view/1 -->\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrls: ['./check-box-printer.component.scss']\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n\n  isChecked: boolean=false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n  check()\n  {\n    this.isChecked = true;\n  }\n\n  unCheck()\n  {\n    this.isChecked = false;\n  }\n}\n","<div>\n    <input type=\"checkbox\" value=\"true\" name=\"isChecked\" id=\"isChecked\" [(ngModel)]=\"isChecked\">\n  </div>\n  ","import { ClientLocation } from './client-location';\r\n\r\nexport class Project\r\n{\r\n    projectID: number;\r\n    projectName: string;\r\n    dateOfStart: string;\r\n    teamSize: number;\r\n    active: boolean;\r\n    status: string;\r\n    clientLocationID: number;\r\n    clientLocation: ClientLocation;\r\n\r\n    constructor()\r\n    {\r\n        this.projectID = null;\r\n        this.projectName = null;\r\n        this.dateOfStart = null;\r\n        this.teamSize = null;\r\n        this.active = true;\r\n        this.status = null;\r\n        this.clientLocationID = null;\r\n        this.clientLocation = new ClientLocation();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>about works!</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appRepeater]'\n})\nexport class RepeaterDirective\n{\n  @Input(\"appRepeater\") n: number;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>)\n  {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit()\n  {\n    for (let i = 0; i < this.n; i++)\n    {\n      this.viewContainerRef.createEmbeddedView(this.templateRef, { $implicit: i});\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService\n{\n  constructor(private httpClient : HttpClient)\n  {\n  }\n\n  getClientLocations(): Observable<ClientLocation[]>\n  {\n    return this.httpClient.get<ClientLocation[]>(\"/api/clientlocations\", { responseType: \"json\" });\n  }\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ProjectsService } from \"../../projects.service\";\r\nimport { Project } from '../../project';\r\nimport { ClientLocation } from '../../client-location';\r\nimport { ClientLocationsService } from '../../client-locations.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport * as $ from \"jquery\";\r\nimport { ProjectComponent } from '../project/project.component';\r\nimport { ViewChildren } from '@angular/core';\r\nimport { QueryList } from '@angular/core';\r\nimport { FilterPipe } from 'src/app/filter.pipe';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit\r\n{\r\n  projects: Project[] = [];\r\n  clientLocations: Observable<ClientLocation[]>;\r\n  showLoading: boolean = true;\r\n\r\n\r\n  newProject: Project = new Project();\r\n  editProject: Project = new Project();\r\n  editIndex: number = null;\r\n  deleteProject: Project = new Project();\r\n  deleteIndex: number = null;\r\n  searchBy: string = \"projectName\";\r\n  searchText: string = \"\";\r\n\r\n  currentPageIndex: number = 0;\r\n  pages: any[] = [];\r\n  pageSize: number = 3;\r\n\r\n  @ViewChild(\"newForm\") newForm: NgForm;\r\n  @ViewChild(\"editForm\") editForm: NgForm;\r\n\r\n  constructor(private projectsService: ProjectsService, private clientLocationsService: ClientLocationsService)\r\n  {\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.projectsService.getAllProjects().subscribe(\r\n      (response: Project[]) =>\r\n      {\r\n        this.projects = response;\r\n        this.showLoading = false;\r\n\r\n        this.calculateNoOfPages();\r\n      }\r\n    );\r\n\r\n    this.clientLocations = this.clientLocationsService.getClientLocations();\r\n  }\r\n\r\n  calculateNoOfPages()\r\n  {\r\n    let filterPipe = new FilterPipe();\r\n    var resultProjects = filterPipe.transform(this.projects, this.searchBy, this.searchText);\r\n    var noOfPages = Math.ceil(resultProjects.length  / this.pageSize);\r\n\r\n    this.pages = [];\r\n    for (let i = 0; i < noOfPages; i++)\r\n    {\r\n      this.pages.push( { pageIndex: i });\r\n    }\r\n\r\n    this.currentPageIndex = 0;\r\n  }\r\n\r\n\r\n  isAllChecked: boolean = false;\r\n\r\n  @ViewChildren(\"prj\") projs: QueryList<ProjectComponent>; //permite tener en projs la lista de projectos\r\n\r\n  isAllCheckedChange(event)\r\n  {\r\n    let proj = this.projs.toArray();\r\n    for (let i = 0; i < proj.length; i++)\r\n    {\r\n      proj[i].isAllCheckedChange(this.isAllChecked); //  a cada projecto le mando el valor del checkbox que esta en projectsComponent\r\n    }\r\n  }\r\n\r\n  @ViewChild(\"prjID\") prjID: ElementRef;\r\n\r\n  onNewClick(event)\r\n  {\r\n    this.newForm.resetForm();\r\n    setTimeout(() => {\r\n      this.prjID.nativeElement.focus();\r\n    }, 100);\r\n  }\r\n\r\n  onSaveClick()\r\n  {\r\n    if (this.newForm.valid)\r\n    {\r\n      this.newProject.clientLocation.clientLocationID = 0;\r\n      this.projectsService.insertProject(this.newProject).subscribe((response) =>\r\n      {\r\n        //Add Project to Grid\r\n        var p: Project = new Project();\r\n        p.projectID = response.projectID;\r\n        p.projectName = response.projectName;\r\n        p.dateOfStart = response.dateOfStart;\r\n        p.teamSize = response.teamSize;\r\n        p.clientLocation = response.clientLocation;\r\n        p.active = response.active;\r\n        p.clientLocationID = response.clientLocationID;\r\n        p.status = response.status;\r\n        this.projects.push(p);\r\n\r\n        //Clear New Project Dialog - TextBoxes\r\n        this.newProject.projectID = null;\r\n        this.newProject.projectName = null;\r\n        this.newProject.dateOfStart = null;\r\n        this.newProject.teamSize = null;\r\n        this.newProject.active = false;\r\n        this.newProject.clientLocationID = null;\r\n        this.newProject.status = null;\r\n\r\n        $(\"#newFormCancel\").trigger(\"click\");\r\n        this.calculateNoOfPages();\r\n      }, (error) =>\r\n        {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  @ViewChild(\"prjName\") prjName: ElementRef;\r\n\r\n  onEditClick(event, index: number)\r\n  {\r\n    this.editForm.resetForm();\r\n    setTimeout(() =>\r\n    {\r\n      this.prjName.nativeElement.focus();\r\n      this.editProject.projectID = this.projects[index].projectID;\r\n      this.editProject.projectName = this.projects[index].projectName;\r\n      this.editProject.dateOfStart = this.projects[index].dateOfStart.split(\"/\").reverse().join(\"-\"); //yyyy-MM-dd\r\n      this.editProject.teamSize = this.projects[index].teamSize;\r\n      this.editProject.active = this.projects[index].active;\r\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\r\n      this.editProject.clientLocation = this.projects[index].clientLocation;\r\n      this.editProject.status = this.projects[index].status;\r\n      this.editIndex = index;\r\n    }, 100);\r\n  }\r\n\r\n  onUpdateClick()\r\n  {\r\n    if (this.editForm.valid)\r\n    {\r\n      this.projectsService.updateProject(this.editProject).subscribe((response: Project) =>\r\n      {\r\n        var p: Project = new Project();\r\n        p.projectID = response.projectID;\r\n        p.projectName = response.projectName;\r\n        p.dateOfStart = response.dateOfStart;\r\n        p.teamSize = response.teamSize;\r\n        p.clientLocation = response.clientLocation;\r\n        p.active = response.active;\r\n        p.clientLocationID = response.clientLocationID;\r\n        p.status = response.status;\r\n        this.projects[this.editIndex] = p;\r\n\r\n        this.editProject.projectID = null;\r\n        this.editProject.projectName = null;\r\n        this.editProject.dateOfStart = null;\r\n        this.editProject.teamSize = null;\r\n        this.newProject.active = false;\r\n        this.newProject.clientLocationID = null;\r\n        this.newProject.status = null;\r\n\r\n        $(\"#editFormCancel\").trigger(\"click\");\r\n      },\r\n        (error) =>\r\n        {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  onDeleteClick(event, index: number)\r\n  {\r\n    this.deleteIndex = index;\r\n    this.deleteProject.projectID = this.projects[index].projectID;\r\n    this.deleteProject.projectName = this.projects[index].projectName;\r\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\r\n    this.deleteProject.teamSize = this.projects[index].teamSize;\r\n  }\r\n\r\n  onDeleteConfirmClick()\r\n  {\r\n    this.projectsService.deleteProject(this.deleteProject.projectID).subscribe(\r\n      (response) =>\r\n      {\r\n        this.projects.splice(this.deleteIndex, 1);\r\n        this.deleteProject.projectID = null;\r\n        this.deleteProject.projectName = null;\r\n        this.deleteProject.teamSize = null;\r\n        this.deleteProject.dateOfStart = null;\r\n\r\n        this.calculateNoOfPages();\r\n      },\r\n      (error) =>\r\n      {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onSearchClick()\r\n  {\r\n    // this.projectsService.SearchProjects(this.searchBy, this.searchText).subscribe(\r\n    //   (response: Project[]) =>\r\n    //   {\r\n    //     this.projects = response;\r\n    //   },\r\n    //   (error) =>\r\n    //   {\r\n    //     console.log(error);\r\n    //   });\r\n  }\r\n\r\n  onSearchTextKeyup(event)\r\n  {\r\n    this.calculateNoOfPages();\r\n  }\r\n\r\n  onHideShowDetails(event)\r\n  {\r\n    this.projectsService.toggleDetails();\r\n  }\r\n\r\n   onPageIndexClicked(pageIndex: number)\r\n  {\r\n    this.currentPageIndex = pageIndex;\r\n  }\r\n}\r\n\r\n","<h1>\r\n  Projects\r\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:34px\" *ngIf=\"showLoading\"></i>\r\n</h1>\r\n<div class=\"row\">\r\n  <div class=\"col-xl-12 mx-auto\">\r\n    <div class=\"form-group form-row\">\r\n\r\n      <div class=\"col-2\">\r\n        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\" (click)=\"onNewClick($event)\">Create Project</button>\r\n      </div>\r\n\r\n      <div class=\"col-2\">\r\n        <button class=\"btn btn-secondary\" (click)=\"onHideShowDetails($event)\">Hide/Show Details</button>\r\n      </div>\r\n\r\n      <div class=\"col-1 custom-control custom-checkbox\">\r\n        <input type=\"checkbox\" value=\"true\" name=\"isAllChecked\" id=\"isAllChecked\" [(ngModel)]=\"isAllChecked\" class=\"custom-control-input\" (change)=\"isAllCheckedChange($event)\">\r\n        <label class=\"custom-control-label\" for=\"isAllChecked\"></label>\r\n      </div>\r\n\r\n      <label for=\"drpSearchBy\" class=\"col-form-label col-1 text-right\">Search by:</label>\r\n\r\n      <div class=\"col-2\">\r\n        <select value=\"projectName\" class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\r\n          <option value=\"projectID\">Project ID</option>\r\n          <option value=\"projectName\">Project Name</option>\r\n          <option value=\"dateOfStart\">Date of Start</option>\r\n          <option value=\"teamSize\">Team Size</option>\r\n        </select>\r\n      </div>\r\n\r\n      <label for=\"textSearchText\" class=\"col-form-label col-1 text-right\">Search:</label>\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\" (keyup)=\"onSearchTextKeyup($event)\">\r\n\r\n         <!-- <div class=\"input-group-append\" (click)=\"onSearchClick()\">\r\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\r\n          </div> -->\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-xl-12 mx-auto\">\r\n    <div class=\"row\">\r\n\r\n      <div class=\"col-md-4 mb-1 projectcard\" *ngFor=\"let project of projects | filter: searchBy : searchText | paging: currentPageIndex: pageSize; let i = index\">\r\n        <app-project #prj [currentProject]=\"project\" [recordIndex]=\"i\" (editClick)=\"onEditClick($event, i)\" (deleteClick)=\"onDeleteClick($event, i)\">\r\n         <app-check-box-printer #selectionBox></app-check-box-printer>\r\n        </app-project>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <ul class=\"pagination justify-content-center mt-1\">\r\n          <li class=\"page-item\" *ngFor=\"let page of pages\" (click)=\"onPageIndexClicked(page.pageIndex)\" [ngClass]=\" { 'active': page.pageIndex == currentPageIndex}\">\r\n            <a href=\"#\" onclick=\"return false\" class=\"page-link\">\r\n              {{page.pageIndex + 1}}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n<form #newForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\r\n  <div class=\"modal\" role=\"dialog\" id=\"newModal\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\" style=\"width:700px\">\r\n        <div class=\"modal-header bg-primary text-white\">\r\n          <div class=\"modal-title\">New Project</div>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtNewProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" id=\"txtNewProjectID\" style=\"width:130px\" class=\"form-control\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"newProject.projectID\" required=\"required\" pattern=\"^[0-9]*$\" appProjectIDUniqueValidator #newProjectID=\"ngModel\" #prjID [ngClass]=\"{ 'is-invalid': newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted), 'is-valid': newProjectID.valid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors?.required\">Project ID can't be blank</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors?.pattern\">Project ID should contain numbers only</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors?.uniqueProjectID\">Duplicate Project ID</span>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtNewProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" id=\"txtNewProjectName\" class=\"form-control\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\" [ngClass]=\"{ 'is-invalid': newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted), 'is-valid': newProjectName.valid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.required\">Project Name can't be blank</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.pattern\">Project Name can contain alphabets, digits, dot, hyphen or space only</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.minlength\">Project name should be at least 3 characters long</span>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtNewDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"date\" id=\"txtNewDateOfStart\" style=\"width:180px\" class=\"form-control\" placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\" required=\"required\" #newDateOfStart=\"ngModel\" [ngClass]=\"{ 'is-invalid': newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted), 'is-valid': newDateOfStart.valid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors?.required\">Date of Start can't be blank</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" id=\"txtTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"5\" #newTeamSize=\"ngModel\" [ngClass]=\"{ 'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), 'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.required\">Team Size should be a number</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.divisible\">Team Size should be divisble by 5</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\r\n            <div class=\"col-sm-8\">\r\n              <div class=\"form-check\">\r\n                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\" [(ngModel)]=\"newProject.active\" name=\"active\">\r\n                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\r\n            <div class=\"col-sm-8\">\r\n\r\n              <div class=\"form-check form-check-inline\">\r\n                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusInForce=\"ngModel\">\r\n                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\r\n              </div>\r\n\r\n              <div class=\"form-check form-check-inline\">\r\n                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusSupport=\"ngModel\">\r\n                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\r\n              </div>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors?.required\">Please select status</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\r\n            <div class=\"col-sm-8\">\r\n              <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\" [(ngModel)]=\"newProject.clientLocationID\" required=\"required\" #newClientLocationID=\"ngModel\" [ngClass]=\"{ 'is-invalid': newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted), 'is-valid': newClientLocationID.valid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) }\">\r\n                <option value=\"null\">Please Select</option>\r\n                <option *ngFor=\"let clientLocation of clientLocations | async\" [value]=\"clientLocation.clientLocationID\">\r\n                  {{clientLocation.clientLocationName}}\r\n                </option>\r\n              </select>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) && newClientLocationID.errors?.required\">Please client location</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) && newForm.errors?.clientLocationStatus\">Support projects are not allowed at Tokyo</span>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newFormCancel\">Cancel</button>\r\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<!-- Edit Project -->\r\n<form #editForm=\"ngForm\" novalidate=\"novalidate\" appClientLocationStatusValidator>\r\n  <div class=\"modal\" role=\"dialog\" id=\"editModal\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\" style=\"width:700px\">\r\n        <div class=\"modal-header\">\r\n          <div class=\"modal-title\">Edit Project</div>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtEditProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" id=\"txtEditProjectID\" style=\"width:130px\" class=\"form-control-plain-text\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"editProject.projectID\" disabled=\"disabled\" required=\"required\" pattern=\"^[0-9]*$\" appProjectIDUniqueValidator #editProjectID=\"ngModel\" [ngClass]=\"{ 'is-invalid': editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || newForm.submitted), 'is-valid': editProjectID.valid && (editProjectID.dirty || editProjectID.touched || newForm.submitted) }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors?.required\">Project ID can't be blank</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors?.pattern\">Project ID should contain numbers only</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors?.uniqueProjectID\">Duplicate Project ID</span>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtEditProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" id=\"txtEditProjectName\" class=\"form-control\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\" #prjName [ngClass]=\"{ 'is-invalid': editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted), 'is-valid': editProjectName.valid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.required\">Project Name can't be blank</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.pattern\">Project Name can contain alphabets, digits, dot, hyphen or space only</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.minlength\">Project name should be at least 3 characters long</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtEditDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"date\" id=\"txtEditDateOfStart\" style=\"width:180px\" class=\"form-control\" placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\" required=\"required\" #editDateOfStart=\"ngModel\" [ngClass]=\"{ 'is-invalid': editDateOfStart.invalid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted), 'is-valid': editDateOfStart.valid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted) }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editDateOfStart.invalid && (editForm.submitted) && editDateOfStart.errors?.required\">Date of Start can't be blank</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtEditTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"5\" #editTeamSize=\"ngModel\" [ngClass]=\"{ 'is-invalid': editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted), 'is-valid': editTeamSize.valid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) }\">\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors?.required\">Team Size should be a number</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors?.divisible\">Team Size should be divisble by 5</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-sm-4\">&nbsp;</label>\r\n            <div class=\"col-sm-8\">\r\n              <div class=\"form-check\">\r\n                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\" [(ngModel)]=\"editProject.active\" name=\"active\">\r\n                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\r\n            <div class=\"col-sm-8\">\r\n\r\n              <div class=\"form-check form-check-inline\">\r\n                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusInForce=\"ngModel\">\r\n                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\r\n              </div>\r\n\r\n              <div class=\"form-check form-check-inline\">\r\n                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusSupport=\"ngModel\">\r\n                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\r\n              </div>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors?.required\">Please select status</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\r\n            <div class=\"col-sm-8\">\r\n              <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"ClientLocation\" [(ngModel)]=\"editProject.clientLocationID\" required=\"required\" #editClientLocationID=\"ngModel\" [ngClass]=\"{ 'is-invalid': editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted), 'is-valid': editClientLocationID.valid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) }\">\r\n                <option value=\"null\">Please Select</option>\r\n                <option *ngFor=\"let clientLocation of clientLocations | async\" [value]=\"clientLocation.clientLocationID\">\r\n                  {{clientLocation.clientLocationName}}\r\n                </option>\r\n              </select>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) && editClientLocationID.errors?.required\">Please client location</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"editForm.invalid && (editForm.dirty || editForm.touched || editForm.submitted) && editForm.errors?.clientLocationStatus\">Support projects are not allowed at Tokyo</span>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\r\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n\r\n<!-- Delete Project -->\r\n<form>\r\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\" style=\"width:700px\">\r\n        <div class=\"modal-header\">\r\n          <div class=\"modal-title\">Delete Project</div>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n          <div class=\"text-warning\">Are you sure to delete this Project?</div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtDeleteProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" id=\"txtDeleteProjectID\" style=\"width:100px\" class=\"form-control-plain-text\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"deleteProject.projectID\" disabled=\"disabled\">\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"txtDeleteProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\r\n            <div class=\"col-sm-8\">\r\n              <input type=\"text\" id=\"txtDeleteProjectName\" class=\"form-control-plain-text\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\r\n          <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanActivateGuardService implements CanActivate\r\n{\r\n  constructor(private loginService : LoginService, private router : Router, private jwtHelperService : JwtHelperService)\r\n  {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot) : boolean\r\n  {\r\n    //console.log(this.router.url);\r\n    var token = sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\r\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == route.data.expectedRole)\r\n    {\r\n      return true; //the user can navigate to the particular route\r\n    }\r\n    else\r\n    {\r\n      this.router.navigate([ \"login\" ]);\r\n      return false; //the user can't navigate to the particular route\r\n    }\r\n  }\r\n}","export class ClientLocation\n{\n    clientLocationID: number;\n    clientLocationName: string;\n\n    constructor()\n    {\n        this.clientLocationID = null;\n        this.clientLocationName = null;\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtInterceptorService implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(request : HttpRequest<any>, next : HttpHandler) : Observable<HttpEvent<any>> //el any es el tipo de respuesta que puede recibir (osea cualquiera)\r\n  {\r\n    var currentUser = { token: \"\" };\r\n    if (sessionStorage.currentUser != null)\r\n    {\r\n      currentUser = JSON.parse(sessionStorage.currentUser);\r\n    }\r\n\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: \"Bearer \" + currentUser.token\r\n      }}\r\n    );\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EmployeeRoutingModule } from './employee-routing/employee-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    TasksComponent\n  ],\n  imports: [    \n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    EmployeeRoutingModule\n  ],\n  exports: [\n    TasksComponent\n  ]\n})\nexport class EmployeeModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberToWords'\n})\nexport class NumberToWordsPipe implements PipeTransform\n{\n  transform(value: any, separator?: string): any\n  {\n    if (value == null)\n    {\n      return null;\n    }\n    else\n    {\n      return this.inWords(value, separator);\n    }\n  }\n\n  private inWords = (n, separator) =>\n  {\n    let a = [\n      '', 'One', 'Two', 'Three', 'Four',\n      'Five', 'Six', 'Seven', 'Eight', 'Nine',\n      'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\n      'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n    ];\n\n    let b = [\n      '', '', 'Twenty', 'Thirty', 'Forty',\n      'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\n    ];\n\n    let g = [\n      '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\n      'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\n    ];\n\n    const arr = x => Array.from(x);\n    const num = x => Number(x) || 0;\n    const str = x => String(x);\n    const isEmpty = xs => xs.length === 0;\n    const take = n => xs => xs.slice(0, n);\n    const drop = n => xs => xs.slice(n);\n    const reverse = xs => xs.slice(0).reverse();\n    const comp = f => g => x => f(g(x));\n    const not = x => !x;\n    const chunk = n => xs =>\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\n\n    let makeGroup = ([ones, tens, huns]) =>\n    {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\n        num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n        a[tens + ones] || a[ones]\n      ].join('');\n    };\n\n    let thousand = (group, i) => group === '' ? group : `${group} ${g[i]}`;\n\n    if (typeof n === 'number')\n      return this.inWords(str(n), separator);\n    else if (n === '0')\n      return 'Zero';\n    else\n      return comp(chunk(3))(reverse)(arr(n)) //le agregué el espacio de entrada\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(separator);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CanActivateGuardService } from 'src/app/can-activate-guard.service';\nimport { TasksComponent } from '../tasks/tasks.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: \"employee\", canActivate: [ CanActivateGuardService ], data: { expectedRole: \"Employee\" }, children: [\n    { path: \"tasks\", component: TasksComponent },\n  ]},\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { Component } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { RouterLoggerService } from './router-logger.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent\r\n{\r\n  constructor(public loginService : LoginService, private domSanitizer : DomSanitizer, \r\n  private routerLoggerService: RouterLoggerService, private router: Router)\r\n  {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd)\r\n      {\r\n        let userName = (this.loginService.currentUserName)? this.loginService.currentUserName : \"anonymous\";\r\n        \r\n        let logMsg = new Date().toLocaleString() + \": \" + userName + \" navigates to \" + event.url;\r\n\r\n        this.routerLoggerService.log(logMsg).subscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n  onSearchClick()\r\n  {\r\n    console.log(this.loginService.currentUserName);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-sm bg-success navbar-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n        Angular Task Manager\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"mynav\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/admin', 'dashboard']\">Dashboard</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['about']\">About</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/admin', 'projects']\">Projects</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\r\n                <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\r\n                <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\r\n                <a class=\"nav-link\" [routerLink]=\"['login']\">Login</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\r\n                <a class=\"nav-link\" [routerLink]=\"['signup']\">Sign Up</a>\r\n            </li>\r\n        </ul>\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n            <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\r\n                </div>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n            </div>\r\n            <button class=\"btn btn-warning my2- my-sm-0\" type=\"button\" (click)=\"onSearchClick()\">Search</button>\r\n        </form>\r\n    </div>\r\n</nav>\r\n\r\n<div class=\"container-fluid\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpBackend, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterLoggerService\n{\n  private httpClient: HttpClient;\n  currentUserName: string = null;\n\n  constructor(private httpBackend: HttpBackend)\n  {\n  }\n\n  public log(logMsg: string): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post(\"/api/routerlogger\", logMsg,\n    { headers: new HttpHeaders().set(\"content-type\", \"text/plain\") }\n    );\n  }\n}\n\n","export class LoginViewModel {\r\n    UserName: string;\r\n    Password: string;\r\n}\r\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [ { provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator\n{\n  constructor()\n  {\n  }\n\n  validate(control: AbstractControl) : ValidationErrors | null\n  {\n    let isValid = true;\n    if (control.value.ClientLocation == 6 && control.value.Status == \"Support\")\n    {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { clientLocationStatus: { valid: false }}; //invalid\n    }\n  }\n\n}","import { Directive, ElementRef, Input, HostListener, HostBinding, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective {\n\n  @Input(\"error\") error: string;\n  @HostBinding(\"title\") title: string;\n\n\n  constructor(private elementRef: ElementRef, private renderer2: Renderer2) {}\n\n  divElement: any;\n  spanElement: any;\n  spanText: any;\n\n  ngOnInit(){\n    this.divElement = this.renderer2.createElement(\"div\"); //<div></div>\n    this.renderer2.setAttribute(this.divElement, \"role\", \"alert\"); //<div role=\"alert\"> </div>\n\n    this.renderer2.setAttribute(this.divElement, \"class\", \"alert alert-danger fade show\");\n    //<div... class=\"alert alert-danger fade show\"> </div>\n\n    this.renderer2.setStyle(this.divElement, \"transition\", \"transform 0.5s\");\n    //<div... style=\"transition: transform 0.5s\"> </div>\n\n    /* span */\n    this.spanElement = this.renderer2.createElement(\"span\");\n    this.renderer2.setAttribute(this.spanElement, \"class\", \"message\");\n    //<span class=\"message\"></span>\n\n    /* spanText */\n    this.spanText = this.renderer2.createText(this.error);\n    this.renderer2.appendChild(this.spanElement, this.spanText);\n    //<span... >${this.error}</span>\n\n    this.renderer2.appendChild(this.divElement, this.spanElement);\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> <span class=\"message\">${this.error}</span> </div>\n\n    this.elementRef.nativeElement.appendChild(this.divElement);\n\n    // this.elementRef.nativeElement.innerHTML = `\n    //   <div class=\"alert alert-danger fade show\" role=\"alert\" style=\"transition: transform 0.5s\">\n    //     <span>${this.error}</span>\n    //   </div>\n    // `;\n\n    this.title = \"Please try again!\";\n  }\n\n  @HostListener(\"mouseenter\", [ \"$event\" ])\n  onMouseEnter(event)\n  {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1.1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1.1)\");\n  }\n\n  @HostListener(\"mouseleave\", [ \"$event\" ])\n  onMouseLeave()\n  {\n    //this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1)\";\n    this.renderer2.setStyle(this.divElement, \"transform\", \"scale(1)\");\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanActivateGuardService } from 'src/app/can-activate-guard.service';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ProjectsComponent } from '../projects/projects.component';\nimport { ProjectDetailsComponent } from '../project-details/project-details.component';\n\nconst routes: Routes = [\n  { path: \"admin\", canActivate: [ CanActivateGuardService ], data: { expectedRole: \"Admin\" }, children: [\n    { path: \"dashboard\", component: DashboardComponent,  },\n    { path: \"projects\", component: ProjectsComponent },\n    { path: \"projects/view/:projectid\", component: ProjectDetailsComponent },\n  ]},\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Project } from 'src/app/project';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { Subscription } from 'rxjs';\nimport { RouterModule } from '@angular/router';\n\n\n@Component({\n  selector: 'app-project-details',\n  templateUrl: './project-details.component.html',\n  styleUrls: ['./project-details.component.scss']\n})\nexport class ProjectDetailsComponent implements OnInit\n{\n  project: Project;\n  routeParmsSubscription: Subscription;\n\n  constructor(private activatedRoute: ActivatedRoute, private projectsService: ProjectsService)\n  {\n    this.project = new Project();\n  }\n\n  ngOnInit()\n  {\n    this.routeParmsSubscription = this.activatedRoute.params.subscribe((params) => {\n      let pid = params[\"projectid\"];\n\n      this.projectsService.getProjectByProjectID(pid).subscribe((proj: Project) => {\n        this.project = proj;\n      });\n\n    });\n  }\n\n  ngOnDestroy()\n  {\n    this.routeParmsSubscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-8 col-lg-6 col-xl-5 mx-auto\">\n    <div class=\"card card-primary mb-1\">\n\n      <div class=\"card-header\">\n        <div>#{{project.projectID}}</div>\n        <h5>{{project.projectName}}</h5>\n      </div>\n\n      <div class=\"card-body\">\n        <table class=\"table table-borderless table-sm\">\n          <tr>\n            <th>Date of Start</th>\n            <td>{{project.dateOfStart}}</td>\n          </tr>\n          <tr>\n            <th>Team Size</th>\n            <td>\n              <span>{{project.teamSize}} </span>\n              <span class=\"text-info\">{{project.teamSize | numberToWords}}</span>\n            </td>\n          </tr>\n          <tr>\n            <th>Client Location</th>\n            <td>{{project.clientLocation?.clientLocationName}}</td>\n          </tr>\n          <tr>\n            <th>Status</th>\n            <td>{{project.status}}</td>\n          </tr>\n        </table>\n      </div>\n\n      <div class=\"card-footer\">\n        <a class=\"btn btn-info\" [routerLink]=\" [ '/projects' ] \">\n          Back\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Country } from './country';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CountriesService\r\n{\r\n  constructor(private httpClient: HttpClient)\r\n  {\r\n  }\r\n\r\n  getCountries(): Observable<Country[]>\r\n  {\r\n    return this.httpClient.get<Country[]>(\"/api/countries\", { responseType: \"json\" });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform\n{\n  transform(value: Project[], currentPageIndex: number, pageSize: number): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let i = currentPageIndex * pageSize; i < (currentPageIndex + 1) * pageSize; i++)\n    {\n      if (value[i])\n      {\n        resultArray.push(value[i]);\n      }\n    }\n    return resultArray;\n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {JwtInterceptorService} from './jwt-interceptor.service';\r\nimport { JwtUnAuthorizedInterceptorService } from './jwt-un-authorized-interceptor.service';\r\nimport {JwtModule} from '@auth0/angular-jwt';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { AlertDirective } from './alert.directive';\r\nimport { RepeaterDirective } from './repeater.directive';\r\nimport { EmployeeModule } from './employee/employee.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignUpComponent,    \r\n    AlertDirective,\r\n    RepeaterDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    AdminModule,\r\n    EmployeeModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => {\r\n          return (sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null)\r\n        }\r\n      }\r\n    }),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtUnAuthorizedInterceptorService,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ValidatorFn, AbstractControl, ValidationErrors, FormGroup, AsyncValidatorFn } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomValidatorsService\r\n{\r\n  constructor(private loginService: LoginService) { }\r\n\r\n  public minimumAgeValidator(minAge: number): ValidatorFn\r\n  {\r\n    return (control: AbstractControl): ValidationErrors | null =>\r\n    {\r\n      if (!control.value)\r\n        return null; //return, if the date of birth is null\r\n\r\n      var today = new Date();\r\n      var dateOfBirth = new Date(control.value);\r\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\r\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\r\n\r\n      if (diffYears >= minAge)\r\n        return null; //valid\r\n      else\r\n        return { minAge: { valid: false } }; //invalid\r\n    };\r\n  } \r\n  \r\n  public confirmedValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n      }\r\n    }\r\n\r\n  public DuplicateEmailValidator(): AsyncValidatorFn\r\n  {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> =>\r\n    {\r\n      return this.loginService.getUserByEmail(control.value).pipe(map((existingUser: any) =>\r\n      {\r\n        if (existingUser != null)\r\n        {\r\n          return { uniqueEmail: { valid: false } }; //invalid\r\n        }\r\n        else\r\n        {\r\n          return null;\r\n        }\r\n      }));\r\n    };\r\n  }\r\n}\r\n\r\n","import { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Project } from './project';\nimport { ProjectsService } from './projects.service';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [ {provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator {\n\n  constructor(private projectService: ProjectsService) { }\n\n  validate(control: AbstractControl): Observable<ValidationErrors | null> {\n    return this.projectService.getProjectByProjectID(control.value).pipe(map((existingProject: Project) => {\n      if (existingProject != null) {\n        return {uniqueProjectID: {valid: false}};\n      }\n      else{\n        return null;\n      } \n    }))\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, ValidationErrors, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [ {provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective implements Validator\n{\n  constructor()\n  {\n  }\n\n  @Input(\"appTeamSizeValidator\") n : string;\n  \n  validate(control: AbstractControl) : ValidationErrors | null\n  {\n    let currentValue = control.value;\n    let isValid = currentValue % parseInt(this.n) == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CountriesService } from '../countries.service';\r\nimport { Country } from '../country';\r\nimport { CustomValidatorsService } from '../custom-validators.service';\r\nimport { LoginService } from '../login.service';\r\nimport { SignUpViewModel } from '../sign-up-view-model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit\r\n{\r\n  signUpForm: FormGroup;\r\n  genders = [\"male\", \"female\"];\r\n  countries: Country[] = []\r\n  submitted: boolean = false; //lo agregué  yo para poder determinar el submitted\r\n  registerError: string = null;\r\n\r\n  constructor(private countriesService: CountriesService, private formBuilder: FormBuilder, private customValidatorsService: CustomValidatorsService, private loginService: LoginService, private router: Router)\r\n  {\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.countriesService.getCountries().subscribe((response) =>\r\n    {\r\n      this.countries = response;\r\n    });\r\n\r\n    this.signUpForm = this.formBuilder.group({\r\n      personName: this.formBuilder.group({\r\n        firstName: [null, [ Validators.required, Validators.minLength(2)]],\r\n        lastName: [null, [ Validators.required, Validators.minLength(2)]],\r\n      }),\r\n\r\n      email: [null, [ Validators.required, Validators.email],[this.customValidatorsService.DuplicateEmailValidator()]],\r\n      mobile: [null, [ Validators.required, Validators.pattern(/^[1-9][0-9]*$/)]],\r\n      dateOfBirth: [null, [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]],\r\n      gender: [null, [ Validators.required]],\r\n      countryID: [null, [ Validators.required]],\r\n      receiveNewsLetters: [null],\r\n      skills: this.formBuilder.array([]),\r\n      password: [null, [Validators.required]],\r\n      confirmPassword: [null, [Validators.required]]\r\n    }, {\r\n      validator: this.customValidatorsService.confirmedValidator('password', 'confirmPassword')\r\n    });\r\n\r\n    this.signUpForm.valueChanges.subscribe((value) =>\r\n    {\r\n      //console.log(value);\r\n    });\r\n  }\r\n\r\n\r\n  onSubmitClick()\r\n  {\r\n    //Display current form value\r\n    this.signUpForm[\"submitted\"] = true;\r\n    this.submitted = true; //esto lo agregué porque no funcionaba el submited hecho como arriba\r\n    console.log(this.signUpForm);\r\n\r\n    if (this.signUpForm.valid)\r\n    {\r\n      var signUpVieModel = this.signUpForm.value as SignUpViewModel;\r\n      this.loginService.Register(signUpVieModel).subscribe(\r\n        (response) => {\r\n          this.router.navigate( [\"/employee\", \"tasks\" ]);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          this.registerError = \"Unable to submit\";\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  onAddSkill()\r\n  {\r\n    var formGroup = new FormGroup({\r\n      skillName: new FormControl(null, [ Validators.required]),\r\n      level: new FormControl(null, [ Validators.required])\r\n    });\r\n\r\n    (<FormArray>this.signUpForm.get(\"skills\")).push(formGroup);\r\n  }\r\n\r\n  onRemoveClick(index: number)\r\n  {\r\n    (<FormArray>this.signUpForm.get(\"skills\")).removeAt(index);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-8 col-xl-6 mx-auto\">\r\n  \r\n      <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\">\r\n  \r\n        <div class=\"card mt-1\">\r\n          <div class=\"card-header\">\r\n            <h4>Sign Up</h4>\r\n          </div>\r\n  \r\n          <div class=\"card-body\">\r\n  \r\n            <div class=\"form-group form-row\" formGroupName=\"personName\">\r\n              <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name:</label>\r\n              <div class=\"col-md-8\">\r\n                <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" class=\"form-control\" formControlName=\"firstName\"  [ngClass]=\"{\r\n                    'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || submitted),\r\n    \r\n                    'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || submitted)}\">                    \r\n\r\n                <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || submitted) && signUpForm.get('personName.firstName').errors?.required\">First name can't be blank</span>\r\n\r\n                <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || submitted) && signUpForm.get('personName.firstName').errors?.minlength\">First name should contain at least 2 characters</span>\r\n              </div>\r\n\r\n            </div>\r\n  \r\n            <div class=\"form-group form-row\" formGroupName=\"personName\">\r\n              <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name:</label>\r\n              <div class=\"col-md-8\">\r\n                <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" formControlName=\"lastName\" [ngClass]=\"{\r\n                    'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || submitted),\r\n    \r\n                    'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || submitted) }\">\r\n                    <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || submitted) && signUpForm.get('personName.lastName').errors?.required\">Last name can't be blank</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || submitted) && signUpForm.get('personName.lastName').errors?.minlength\">Last name should contain at least 2 characters</span>\r\n    \r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"form-group form-row\">\r\n              <label for=\"email\" class=\"col-md-4 col-form-label\">Email:</label>\r\n              <div class=\"col-md-8\">\r\n                <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\" formControlName=\"email\" [ngClass]=\"{\r\n                    'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || submitted),\r\n    \r\n                    'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || submitted) }\">\r\n\r\n                    <span class=\"text-danger\" *ngIf=\"(signUpForm.get('email').dirty || signUpForm.get('email').touched || submitted) && signUpForm.get('email').errors?.uniqueEmail\">Email already exists</span>\r\n\r\n                    <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || submitted) && signUpForm.get('email').errors?.required\">Email can't be blank</span>\r\n\r\n                    <span class=\"text-danger\" *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || submitted) && signUpForm.get('email').errors?.email\">Email is invalid</span>\r\n\r\n                    \r\n                        \r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"form-group form-row\">\r\n              <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile:</label>\r\n              <div class=\"col-md-8\">\r\n                <input type=\"text\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" class=\"form-control\" formControlName=\"mobile\" [ngClass]=\"{\r\n                    'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || submitted),\r\n    \r\n                    'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || submitted) }\">\r\n\r\n                    <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || submitted) && signUpForm.get('mobile').errors?.required\">Mobile can't be blank</span>\r\n\r\n                    <span class=\"text-danger\" *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || submitted) && signUpForm.get('mobile').errors?.pattern\">Mobile is invalid</span>\r\n    \r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"form-group form-row\">\r\n              <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth:</label>\r\n              <div class=\"col-md-8\">\r\n                <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" placeholder=\"Date of Birth\" class=\"form-control\" formControlName=\"dateOfBirth\" [ngClass]=\"{\r\n                    'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || submitted),\r\n    \r\n                    'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || submitted) }\">\r\n\r\n                    \r\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || submitted) && signUpForm.get('dateOfBirth').errors?.required\">Date of Birth can't be blank</span>\r\n\r\n              <span class=\"text-danger\" *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || submitted) && signUpForm.get('dateOfBirth').errors?.minAge\">Minimum Age must be 18</span>\r\n\r\n    \r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group form-row\">\r\n                <label for=\"password\" class=\"col-md-4 col-form-label\">Password:</label>\r\n                <div class=\"col-md-8\">\r\n                  <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" class=\"form-control\" formControlName=\"password\" [ngClass]=\"{\r\n                      'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || submitted),\r\n      \r\n                      'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || submitted) }\">\r\n  \r\n                      \r\n                <span class=\"text-danger\" *ngIf=\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || submitted) && signUpForm.get('password').errors?.required\">Password can't be blank</span>  \r\n                \r\n  \r\n      \r\n                </div>\r\n              </div>\r\n\r\n            <div class=\"form-group form-row\">\r\n                <label for=\"confirmPassword\" class=\"col-md-4 col-form-label\">Confirm Password:</label>\r\n                <div class=\"col-md-8\">\r\n                  <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Confirm Password\" class=\"form-control\" formControlName=\"confirmPassword\" [ngClass]=\"{\r\n                      'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || submitted),\r\n      \r\n                      'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || submitted) }\">\r\n  \r\n                      \r\n                <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || submitted) && signUpForm.get('confirmPassword').errors?.required\">Password can't be blank</span>\r\n  \r\n                <span class=\"text-danger\" *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || submitted) && signUpForm.get('confirmPassword').errors.confirmedValidator\">Password and Confirm Password must be match</span>\r\n  \r\n      \r\n                </div>\r\n              </div>\r\n\r\n              \r\n  \r\n            <div class=\"form-group form-row\">\r\n              <label class=\"col-md-4 col-form-label\">Gender:</label>\r\n              <div class=\"col-md-8\">\r\n  \r\n                <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\r\n                  <input type=\"radio\" name=\"gender\" [id]=\"gender\" [value]=\"gender\" class=\"form-check-input\" formControlName=\"gender\">\r\n                  <label [for]=\"gender\" class=\"form-check-label\">{{gender}}</label>                  \r\n                </div>\r\n                <span class=\"text-danger\" *ngIf=\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || submitted) && signUpForm.get('gender').errors?.required\">Please select gender</span>\r\n\r\n\r\n  \r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"form-group form-row\">\r\n                <label for=\"countryID\" class=\"col-md-4 col-form-label\">Country:</label>\r\n                <div class=\"col-md-8\">\r\n                  <select name=\"countryID\" id=\"countryID\" class=\"form-control\" formControlName=\"countryID\" [ngClass]=\"{\r\n                    'is-invalid': signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || submitted),\r\n    \r\n                    'is-valid': signUpForm.get('countryID').valid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || submitted) }\">\r\n                    <option value=\"null\">Please Select</option>\r\n                    <option *ngFor=\"let country of countries\" [value]=\"country.countryID\">\r\n                      {{country.countryName}}\r\n                    </option>\r\n                  </select>\r\n\r\n                  <span class=\"text-danger\" *ngIf=\"signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || submitted) && signUpForm.get('countryID').errors?.required\">Please select country</span>\r\n\r\n                </div>\r\n              </div>\r\n    \r\n  \r\n            <div class=\"form-group form-row\">\r\n              <label class=\"col-md-4 col-form-label\"></label>\r\n              <div class=\"col-md-8\">\r\n                <input type=\"checkbox\" name=\"receiveNewsLetters\" id=\"receiveNewsLetters\" value=\"true\" class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\r\n                <label for=\"receiveNewsLetters\" class=\"form-check-label\">Receive News Letters</label>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"form-group form-row\">\r\n              <label class=\"col-md-4 col-form-label\">Skills:</label>\r\n              <div class=\"col-md-8\" formArrayName=\"skills\">\r\n                <div class=\"row\" *ngFor=\"let skill of signUpForm.get('skills')['controls']; let i = index\" [formGroupName]=\"i\">\r\n                  \r\n                  <div class=\"col-5\">\r\n                    <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\" formControlName=\"skillName\" class=\"form-control\" [ngClass]=\"{\r\n                        'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || submitted),\r\n        \r\n                        'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || submitted) }\">\r\n    \r\n                  </div>\r\n  \r\n                  <div class=\"col-4\">\r\n                    <select name=\"level\" id=\"level\" formControlName=\"level\" class=\"form-control\" [ngClass]=\"{\r\n                        'is-invalid': skill.get('level').invalid && (skill.get('level').dirty || skill.get('level').touched || submitted),\r\n        \r\n                        'is-valid': skill.get('level').valid && (skill.get('level').dirty || skill.get('level').touched || submitted) }\">\r\n                        <option value=\"null\">Please Select</option>\r\n                        <option value=\"Beginner\">Beginner</option>\r\n                        <option value=\"Intermediate\">Intermediate</option>\r\n                        <option value=\"Professional\">Professional</option>\r\n                        <option value=\"Expert\">Expert</option>\r\n                      </select>\r\n    \r\n                  </div>\r\n  \r\n                  <div class=\"col-3\">\r\n                    <button class=\"btn btn-danger\" type=\"button\" (click)=\"onRemoveClick(i)\">Remove</button>\r\n                  </div>\r\n                </div>\r\n  \r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\r\n              </div>\r\n  \r\n              \r\n            </div>\r\n  \r\n            {{signUpForm.value | json}}\r\n          </div>\r\n  \r\n          <div class=\"card-footer\">\r\n            <button class=\"btn btn-success float-right\">Create Account</button>\r\n            <div class=\"text-danger\">{{registerError}}</div>\r\n          </div>\r\n  \r\n        </div>\r\n  \r\n      </form>\r\n    </div>\r\n  </div>","import { ElementRef, Injectable, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpBackend } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginViewModel } from './login-view-model';\r\nimport { map } from 'rxjs/operators';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\nimport { SignUpViewModel } from './sign-up-view-model';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService\r\n{\r\n  private httpClient : HttpClient; //esto es para que no se llame al interceptor cuando quiero autorizar (el intercep me agrega el token en el request)\r\n  constructor(private httpBackend: HttpBackend, private jwtHelperService: JwtHelperService) //esto tambien\r\n  {\r\n  }\r\n\r\n  currentUserName: string  = null;\r\n\r\n  public Login(loginViewModel: LoginViewModel): Observable<any>\r\n  {\r\n    this.httpClient = new HttpClient(this.httpBackend); //esto tambien\r\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, { responseType: \"json\", observe: \"response\" })\r\n    .pipe(map(response => {\r\n      if (response)\r\n      {\r\n        this.currentUserName = response.body.userName;\r\n        sessionStorage.currentUser = JSON.stringify(response.body);\r\n        sessionStorage.XSRFRequestToken = response.headers.get(\"XSRF-REQUEST-TOKEN\");\r\n      }\r\n      return response.body;\r\n    }));\r\n  }\r\n\r\n  public Register(signUpViewModel: SignUpViewModel): Observable<any>\r\n  {\r\n    this.httpClient = new HttpClient(this.httpBackend); //esto tambien\r\n    return this.httpClient.post<any>(\"/register\", signUpViewModel, { responseType: \"json\", observe: \"response\" })\r\n    .pipe(map(response => {\r\n      if (response)\r\n      {\r\n        this.currentUserName = response.body.userName;\r\n        sessionStorage.currentUser = JSON.stringify(response.body);\r\n        sessionStorage.XSRFRequestToken = response.headers.get(\"XSRF-REQUEST-TOKEN\");\r\n      }\r\n      return response.body;\r\n    }));\r\n  }\r\n\r\n  getUserByEmail(Email: string): Observable<any>\r\n  {\r\n    this.httpClient = new HttpClient(this.httpBackend);\r\n    return this.httpClient.get<any>(\"/api/getUserByEmail/\" + Email, { responseType: \"json\" });\r\n  }\r\n\r\n  public Logout()\r\n  {\r\n    sessionStorage.removeItem(\"currentUser\");\r\n    this.currentUserName = null;\r\n  }\r\n\r\n  public isAuthenticated(): boolean\r\n  {\r\n    var token = sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\r\n    if (this.jwtHelperService.isTokenExpired())\r\n    {\r\n      return false; //token is not valid\r\n    }\r\n    else\r\n    {\r\n      return true; //token is valid\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    return next.handle(request).pipe(tap(\n\n      (event: HttpEvent<any>) =>\n      {\n        if (event instanceof HttpResponse)\n        {\n          //do something with response\n        }\n      },\n\n      (error: any) =>\n      {\n        if (error instanceof HttpErrorResponse)\n        {\n          if (error.status == 401)\n          {\n            console.log(error);\n            alert(\"401 UnAuthorized\");\n          }\n        }\n      }\n\n    ));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from './project';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform\n{\n  transform(value: Project[], searchBy: string, searchText: string): any\n  {\n    if (value == null)\n    {\n      return value;\n    }\n\n    let resultArray = [];\n    for (let item of value)\n    {\n      if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\n      {\n        resultArray.push(item);\n      }\n    }\n\n    return resultArray;\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { MyProfileComponent } from \"./my-profile/my-profile.component\";\r\nimport { AboutComponent } from \"./about/about.component\";\r\nimport { DashboardService } from \"../dashboard.service\";\r\nimport { ProjectsComponent } from \"./projects/projects.component\";\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TeamSizeValidatorDirective } from '../team-size-validator.directive';\r\nimport { ClientLocationStatusValidatorDirective } from '../client-location-status-validator.directive';\r\nimport { ProjectIDUniqueValidatorDirective } from '../project-idunique-validator.directive';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { CheckBoxPrinterComponent } from './check-box-printer/check-box-printer.component';\r\nimport { NumberToWordsPipe } from '../number-to-words.pipe';\r\nimport { FilterPipe } from '../filter.pipe';\r\nimport { PagingPipe } from '../paging.pipe';\r\nimport { ProjectDetailsComponent } from './project-details/project-details.component';\r\nimport { AdminRoutingModule } from './admin-routing/admin-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    MyProfileComponent,\r\n    AboutComponent,\r\n    ProjectsComponent,\r\n    TeamSizeValidatorDirective,\r\n    ClientLocationStatusValidatorDirective,\r\n    ProjectIDUniqueValidatorDirective,\r\n    ProjectComponent,\r\n    CheckBoxPrinterComponent,\r\n    NumberToWordsPipe,\r\n    FilterPipe,\r\n    PagingPipe,\r\n    ProjectDetailsComponent\r\n  ],\r\n  imports: [ CommonModule, FormsModule, AdminRoutingModule ],\r\n  exports: [ DashboardComponent, MyProfileComponent, AboutComponent, ProjectsComponent, TeamSizeValidatorDirective, ClientLocationStatusValidatorDirective, ProjectIDUniqueValidatorDirective, ProjectDetailsComponent],\r\n  providers: [ DashboardService ]\r\n})\r\nexport class AdminModule\r\n{\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-my-profile',\r\n  templateUrl: './my-profile.component.html',\r\n  styleUrls: ['./my-profile.component.scss']\r\n})\r\nexport class MyProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>my-profile works!</p>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tasks works!</p>\n","<nav>\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\r\n      <li class=\"breadcrumb-item active\">Dashboard</li>\r\n    </ol>\r\n  </nav>\r\n  \r\n  <h5>Dashboard</h5>\r\n  <h6>{{ToDay | date:\"d/M/yyyy\"}}</h6>\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-3 pb-3\" style=\"background-color: #e9e6e6\">\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\r\n          style=\"\r\n            background-color: #a39e9e;\r\n            font-family: 'Arial Narrow Bold', sans-serif;\r\n          \"\r\n        >\r\n          {{ Designation | uppercase }}\r\n        </div>\r\n        <div class=\"col-12 text-center mt-2\">\r\n          <img src=\"assets/user.png\" width=\"120px\" />\r\n        </div>\r\n        <div\r\n          class=\"col-12 text-center pt-2 pb-2 font-weight-bold\"\r\n          style=\"font-family: Tahoma\"\r\n        >\r\n          {{ Username|lowercase }}\r\n        </div>\r\n        <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">\r\n          TEAM SUMMARY\r\n        </div>\r\n        <div class=\"col-12 mb-3\">\r\n          <ul class=\"list-group\">\r\n            <li\r\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n              NO. OF TEAM MEMBERS\r\n              <span\r\n                class=\"badge badge-secondary badge-pill\"\r\n                style=\"font-size: 13px\"\r\n                >{{ NoOfTeamMembers }}</span\r\n              >\r\n            </li>\r\n            <li\r\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n              TOTAL COST OF ALL PROJECTS\r\n              <span\r\n                class=\"badge badge-secondary badge-pill\"\r\n                style=\"font-size: 13px\"\r\n                >$ {{ TotalCostOfAllProjects }} k</span\r\n              >\r\n            </li>\r\n            <li\r\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n              PENDING TASKS\r\n              <span\r\n                class=\"badge badge-secondary badge-pill\"\r\n                style=\"font-size: 13px\"\r\n                >{{ PendingTasks }}</span\r\n              >\r\n            </li>\r\n            <li\r\n              class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            >\r\n              UPCOMING PROJECTS\r\n              <span\r\n                class=\"badge badge-secondary badge-pill\"\r\n                style=\"font-size: 13px\"\r\n                >{{ UpComingProjects | percent}}</span\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div\r\n          class=\"col-12 text-center pt-2 pb-2\"\r\n          style=\"font-family: 'Arial Narrow'\"\r\n        >\r\n          CLIENTS\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item\" *ngFor=\"let client of Clients\">\r\n              {{ client | slice: 0:10 }}\r\n            </li>\r\n          </ul>\r\n          <!-- {{TeamMembersSummary | json}} -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-6\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 pt-0 pb-2\" style=\"background-color: #e9e6e6\">\r\n          <div class=\"row mt-2\">\r\n            <div class=\"col-6 text-left\">\r\n              <div class=\"dropdown\">\r\n                <button\r\n                  class=\"btn btn-secondary dropdown-toggle\"\r\n                  type=\"button\"\r\n                  id=\"dropdownMenuButton\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  Project A\r\n                </button>\r\n                <div class=\"dropdown-menu\">\r\n                  <a\r\n                    class=\"dropdown-item\"\r\n                    href=\"#\"\r\n                    *ngFor=\"let project of Projects\"\r\n                    onclick=\"return false\"\r\n                    (click)=\"onProjectChange($event)\"\r\n                    >{{ project }}</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-6 text-right\">\r\n              <div class=\"dropdown\">\r\n                <button\r\n                  class=\"btn btn-secondary dropdown-toggle\"\r\n                  type=\"button\"\r\n                  id=\"dropdownMenuButton\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  2019\r\n                </button>\r\n                <div class=\"dropdown-menu\">\r\n                  <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\">\r\n                    <span [ngSwitch]=\"year\">\r\n                        <span *ngSwitchCase=\"2019\" style=\"color: green\">{{year}}</span>\r\n                        <span *ngSwitchCase=\"2018\" style=\"color: blue\">{{year}}</span>\r\n                        <span *ngSwitchCase=\"2017\" style=\"color: red\">{{year}}</span>\r\n                        <span *ngSwitchDefault style=\"color: black\">{{year}}</span>\r\n                    </span>                      \r\n                    </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\r\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\r\n        >\r\n          PROJECT BRIEFING\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <table class=\"table table-borderless\">\r\n            <tr>\r\n              <td>Project Cost</td>\r\n              <td>{{ ProjectCost | currency: \"USD\"}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Current Expenditure</td>\r\n              <td>{{ CurrentExpenditure | currency: \"AR$\"}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Available Funds</td>\r\n              <td>{{ AvailableFunds | currency: \"INR\"}}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div\r\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\"\r\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\r\n        >\r\n          TEAM MEMBERS SUMMARY\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <table class=\"table\">\r\n            <tr>\r\n              <th>Region</th>\r\n              <th>Team Members Count</th>\r\n              <th>Temporarily Unavailable Members</th>\r\n            </tr>\r\n            <tr *ngFor=\"let teamMemberSumary of TeamMembersSummary\">\r\n              <td>\r\n                <b>{{ teamMemberSumary.Region }}</b>\r\n              </td>\r\n              <td>\r\n                {{ teamMemberSumary.TeamMembersCount }}\r\n              </td>\r\n              <td>\r\n                {{ teamMemberSumary.TemporarilyUnavailableMembers }}\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-3\" style=\"background-color: #e9e6e6\">\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"col-11 mx-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\"\r\n          style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\r\n        >\r\n          TEAM MEMBERS\r\n        </div>\r\n        <div class=\"col-lg-12 pt-2\">\r\n          <div class=\"accordion\" id=\"accordion1\">\r\n            <div\r\n              class=\"card\"\r\n              *ngFor=\"let teamMembersGroup of TeamMembers; let i = index\"\r\n            >\r\n              <div class=\"card-header bg-secondary\" id=\"card1\">\r\n                <h2 class=\"mb-0\">\r\n                  <button\r\n                    class=\"btn btn-link text-white\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    [attr.data-target]=\"'#cardbody' + i\"\r\n                  >\r\n                    {{ teamMembersGroup.Region }}\r\n                  </button>\r\n                </h2>\r\n              </div>\r\n              <div\r\n                [id]=\"'cardbody' + i\"\r\n                class=\"collapse\"\r\n                data-parent=\"#accordion1\"\r\n                [ngClass]=\"i == 0 ? 'show' : ''\"\r\n              >\r\n                <div class=\"card-body\">\r\n                  <div\r\n                    *ngIf=\"i == 0; then firstTemplate; else secondTemplate\"\r\n                  ></div>\r\n  \r\n                  <ng-template #firstTemplate>\r\n                    <div\r\n                      class=\"card\"\r\n                      *ngFor=\"let member of teamMembersGroup.Members\"\r\n                    >\r\n                      <div class=\"card-header bg-primary text-white\">\r\n                        #{{ member.ID }} {{ member.Name }}\r\n                      </div>\r\n                      <div class=\"card-body\">{{ member.Status }}</div>\r\n                    </div>\r\n                  </ng-template>\r\n  \r\n                  <ng-template #secondTemplate>\r\n                    <table class=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>ID</th>\r\n                          <th>Name</th>\r\n                          <th>Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr *ngFor=\"let member of teamMembersGroup.Members\">\r\n                          <td>{{ member.ID }}</td>\r\n                          <td\r\n                            [style.color]=\"\r\n                              member.Status == 'Busy' ? 'red' : 'black'\r\n                            \"\r\n                          >\r\n                            {{ member.Name }}\r\n                          </td>\r\n                          <td>{{ member.Status }}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </ng-template>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../dashboard.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  Designation: string = null;\r\n  Username: string = null;\r\n  NoOfTeamMembers: number = 0;\r\n  TotalCostOfAllProjects: number = 0;\r\n  PendingTasks: number = 0;\r\n  UpComingProjects: number = 0;\r\n  ProjectCost: number = 0;\r\n  CurrentExpenditure: number = 0;\r\n  AvailableFunds: number = 0;\r\n  ToDay: Date;\r\n\r\n  Clients: string[] = [];\r\n  Projects: string[] = [];\r\n  Years: number[] = [];\r\n  TeamMembersSummary: any = [];\r\n  TeamMembers: any = [];\r\n\r\n  constructor(private dashboardService: DashboardService) {\r\n    this.ToDay = new Date();\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.Designation = 'Team Leader';\r\n    this.Username = 'Scott Smith';\r\n    this.NoOfTeamMembers = 67;\r\n    this.TotalCostOfAllProjects = 240;\r\n    this.PendingTasks = 15;\r\n    this.UpComingProjects = 0.2;\r\n    this.ProjectCost = 2113507;\r\n    this.CurrentExpenditure = 96788;\r\n    this.AvailableFunds = 52536;\r\n    \r\n\r\n    this.Clients = [\r\n      'ABC Infotech Ltd.',\r\n      'DEF Software Solutions',\r\n      'GHI Industries',\r\n    ];\r\n\r\n    this.Projects = ['Project A', 'Project B', 'Project C', 'Project D'];\r\n\r\n    for (var i = 2019; i >= 2010; i--) {\r\n      this.Years.push(i);\r\n    }\r\n\r\n    this.TeamMembersSummary = this.dashboardService.getTeamMembersSummary();\r\n\r\n    this.TeamMembers = [\r\n      {\r\n        Region: 'East',\r\n        Members: [\r\n          { ID: 1, Name: 'Ford', Status: 'Available' },\r\n          { ID: 2, Name: 'Miller', Status: 'Available' },\r\n          { ID: 3, Name: 'Jones', Status: 'Busy' },\r\n          { ID: 4, Name: 'James', Status: 'Busy' },\r\n        ],\r\n      },\r\n      {\r\n        Region: 'West',\r\n        Members: [\r\n          { ID: 5, Name: 'Anna', Status: 'Available' },\r\n          { ID: 6, Name: 'Arun', Status: 'Available' },\r\n          { ID: 7, Name: 'Varun', Status: 'Busy' },\r\n          { ID: 8, Name: 'Jasmine', Status: 'Busy' },\r\n        ],\r\n      },\r\n      {\r\n        Region: 'South',\r\n        Members: [\r\n          { ID: 9, Name: 'Krishna', Status: 'Available' },\r\n          { ID: 10, Name: 'Mohan', Status: 'Available' },\r\n          { ID: 11, Name: 'Raju', Status: 'Busy' },\r\n          { ID: 12, Name: 'Farooq', Status: 'Busy' },\r\n        ],\r\n      },\r\n      {\r\n        Region: 'North',\r\n        Members: [\r\n          { ID: 13, Name: 'Jacob', Status: 'Available' },\r\n          { ID: 14, Name: 'Smith', Status: 'Available' },\r\n          { ID: 15, Name: 'Jones', Status: 'Busy' },\r\n          { ID: 16, Name: 'James', Status: 'Busy' },\r\n        ],\r\n      },\r\n    ];\r\n  }\r\n\r\n  onProjectChange($event) {\r\n    if ($event.target.innerHTML == 'Project A') {\r\n      this.ProjectCost = 2113507;\r\n      this.CurrentExpenditure = 96788;\r\n      this.AvailableFunds = 52436;\r\n    } else if ($event.target.innerHTML == 'Project B') {\r\n      this.ProjectCost = 88923;\r\n      this.CurrentExpenditure = 22450;\r\n      this.AvailableFunds = 2640;\r\n    } else if ($event.target.innerHTML == 'Project C') {\r\n      this.ProjectCost = 662183;\r\n      this.CurrentExpenditure = 7721;\r\n      this.AvailableFunds = 9811;\r\n    } else if ($event.target.innerHTML == 'Project D') {\r\n      this.ProjectCost = 928431;\r\n      this.CurrentExpenditure = 562;\r\n      this.AvailableFunds = 883;\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AboutComponent } from \"./admin/about/about.component\";\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CanActivateGuardService } from './can-activate-guard.service';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { TasksComponent } from './employee/tasks/tasks.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SignUpComponent },\r\n  { path: \"about\", component: AboutComponent }, \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing:true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule\r\n{\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit\n{\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService: LoginService, private router : Router)\n  {\n  }\n\n  @ViewChild(\"logOut\") logOut: ElementRef;\n\n  ngOnInit()\n  {\n    setTimeout(() => {\n      this.logOut.nativeElement.focus();\n    }, 100);\n  }\n\n  onLoginClick(event)\n  {\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response) => {\n        this.router.navigate([\"/admin\", \"dashboard\"]);\n      },\n      (error) => {\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n\n}\n","<form>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n        <div class=\"card mt-4\">\n          <div class=\"card-header bg-secondary text-white\">\n            <h3>Login</h3>\n            <div appAlert [error]=\"loginError\" *ngIf=\"loginError\"></div>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"form-group form-row\">\n              <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n              <div class=\"col-md-8\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.UserName\" #logOut name=\"UserName\" autofocus=\"autofocus\">\n              </div>\n            </div>\n\n            <div class=\"form-group form-row\">\n              <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n              <div class=\"col-md-8\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"loginViewModel.Password\" name=\"Password\">\n              </div>\n            </div>\n\n          </div>\n\n        <div class=\"card-footer text-right\">\n          <!-- <span class=\"text-danger\">{{loginError}}&nbsp;</span> -->\n          <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { BehaviorSubject, Observable, Observer } from 'rxjs';\r\nimport { Project } from './project';\r\nimport { map } from \"rxjs/operators\";\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService\r\n{\r\npublic MySubject: BehaviorSubject<boolean>;\r\nprivate MyObservers: Observer<boolean>[] = [];\r\n\r\n  constructor(private httpClient : HttpClient)\r\n  {\r\n    this.MySubject = new BehaviorSubject<boolean>(false); \r\n  } \r\n\r\n\r\n  toggleDetails()  {\r\n   \r\n    this.MySubject.next(!this.MySubject.value);  \r\n  }\r\n\r\n\r\n\r\n  getAllProjects() : Observable<Project[]>\r\n  {\r\n    return this.httpClient.get<Project[]>(\"/api/projects\", { responseType: \"json\" })\r\n    .pipe(map(\r\n      (data: Project[]) => {\r\n        for (let i = 0; i < data.length; i++)\r\n        {\r\n          //data[i].teamSize = data[i].teamSize * 100;\r\n        }\r\n        return data;\r\n      }\r\n    ));\r\n  }\r\n\r\n  getProjectByProjectID(ProjectID: number): Observable<Project>\r\n  {\r\n    return this.httpClient.get<Project>(\"/api/projects/searchbyprojectid/\" + ProjectID, { responseType: \"json\" });\r\n  }\r\n\r\n  insertProject(newProject: Project) : Observable<Project>\r\n  {\r\n    var requestHeaders = new HttpHeaders();\r\n    requestHeaders = requestHeaders.set(\"X-XSRF-TOKEN\", sessionStorage.XSRFRequestToken);\r\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { headers: requestHeaders, responseType: \"json\" });\r\n  }\r\n\r\n  updateProject(existingProject: Project) : Observable<Project>\r\n  {\r\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, { responseType: \"json\" });\r\n  }\r\n\r\n  deleteProject(ProjectID: number) : Observable<string>\r\n  {\r\n    return this.httpClient.delete<string>(\"/api/projects?ProjectID=\" + ProjectID);\r\n  }\r\n\r\n  SearchProjects(searchBy: string, searchText: string) : Observable<Project[]>\r\n  {\r\n    return this.httpClient.get<Project[]>(\"/api/projects/search/\" + searchBy + \"/\" + searchText, { responseType: \"json\" });\r\n  }\r\n}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}